version: "3"
services:
 rubiks-client:
  build:
   context: ./client
   dockerfile: Dockerfile.dev
  volumes:
   - ./client/:/home/node/app
   - rubiksnodemoduleclient:/home/node/app/node_modules
  container_name: rubiks-client
  environment:
   - CHOKIDAR_USEPOLLING=true
  ports:
   - 8080:8080
  restart: always
  depends_on: 
   - rubiks-server
  networks: 
   - rubiks-network
  command: ["npm", "run", "serve"]
 rubiks-server:
  build:
   context: ./server
   dockerfile: Dockerfile.dev
  volumes:
   - ./server/:/home/node/app
   - rubiksnodemoduleserver:/home/node/app/node_modules
  container_name: rubiks-server
  environment: 
   - HOST=0.0.0.0
   - PORT=3333
   - NODE_ENV=development
   - APP_NAME=rubiksmind
   - APP_URL=http://0.0.0.0:3333
   - CACHE_VIEWS=false
   - APP_KEY=dPivoSpeQpBSbC1qPmwQKMZQYvrdDQjw
   - DB_CONNECTION=mysql
   - DB_HOST=rubiks-mysql
   - DB_PORT=3306
   - DB_USER=rubiks-user
   - DB_PASSWORD=root
   - DB_DATABASE=rubiksmind
   - HASH_DRIVER=bcrypt
  restart: always
  ports:
   - 3333:3333
  depends_on: 
   - rubiks-mysql
  networks: 
   - rubiks-network
  command: sh -c './wait-for rubiks-mysql:3306 -- adonis migration:run && npm run start-dev'
 rubiks-mysql:
  image: mysql:5.7
  container_name: rubiks-mysql
  restart: always
  volumes:
   - rubiksmysqldata:/var/lib/mysql
  environment:
   MYSQL_DATABASE: rubiksmind
   MYSQL_ROOT_PASSWORD: root
   MYSQL_USER: rubiks-user
   MYSQL_PASSWORD: root
  ports:
   - 3306:3306
  networks: 
   - rubiks-network
networks: 
 rubiks-network:
  driver: bridge
volumes:
 rubiksmysqldata:
 rubiksnodemoduleserver:
 rubiksnodemoduleclient: